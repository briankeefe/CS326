{"version":3,"sources":["webpack:///./src/App.jsx","webpack:///./src/App01.jsx"],"names":["contentNode","document","getElementById","NoMatch","App","props","children","propTypes","React","PropTypes","object","isRequired","RoutedApp","hashHistory","IssueList","ReactDOM","render","issues","category","budget","flow","asset","IssueRow","issue","BudgetTable","issueRows","map","id","margin","border","float","BalanceTable","spent","savings","i","parseInt","width","backgroundColor","BudgetAdd","handleSubmit","bind","e","preventDefault","form","forms","enterInfo","value","marginTop","Component","Navbar","marginRight","Jumbo","padding","borderStyle","color","paddingTop","IncomeAdd","createInflow","income","borderRadius","state","loadData","fetch","location","search","then","response","ok","json","console","log","data","_metadata","total_count","setState","assets","alert","error","message","catch","err","newIssue","method","body","JSON","stringify","headers","res","newIssues","slice","isNaN","undefined","push","update","newFlow","total","clear","router"],"mappings":"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","file":"static/app.bundle.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, Route, hashHistory, withRouter, IndexRoute, Link } from 'react-router';\nimport IssueList from './App01.jsx'\n\nvar contentNode = document.getElementById(\"contents\");\n\n// A simple component to indicate that a page was not found.\nconst NoMatch = () => <p>Page Not Found</p>;\n\n// This defines the main application layout that can be used\n// across nested routes. The `props.children` property is received\n// by the parent route. See the route definitions below.\nconst App = (props) => (\n  <div>\n    <div className=\"header\">\n      <h1>Issue Tracker</h1>\n      <p><Link to=\"/\">Logout</Link></p>\n    </div>\n    <div className=\"contents\">\n      {props.children}\n    </div>\n    <div className=\"footer\">\n      COMPSCI 326\n    </div>\n  </div >\n);\n\n// For safety, we specify that the prop types received by the\n// App component must require a \"children\" property. If we do\n// not include this it will not compile.\nApp.propTypes = {\n  children: React.PropTypes.object.isRequired,\n};\n\n// The \"routed app\" that defines the different routes that\n// are supposed in this application. As you can see, If the\n// URL path is '/' we will render the IssueList component,\n// if the path is '/issues/:id' we render the IssueEdit component,\n// and if we get anything else we render the NoMatch view.\n// This router uses the \"hash history\" approach to implement\n// single-page apps with multiple views.\nconst RoutedApp = () => (\n  <Router history={hashHistory} >\n    {/* <Redirect from=\"/\" to=\"/issues\" /> - replaced this with the Dashboard component */}\n    <Route path=\"/\" component={withRouter(IssueList)} >\n      <Route path=\"/issues\" />\n      <Route path=\"/issues/:id\" />\n      <Route path=\"*\" component={NoMatch} />\n    </Route>\n  </Router>);\n\n// This renders the JSX router inside the content node:\nReactDOM.render(<RoutedApp />, contentNode);\n\n\n// WEBPACK FOOTER //\n// ./src/App.jsx","const issues = [\r\n  {\r\n    category: \"Savings\",\r\n    budget: 0,\r\n    flow: 0\r\n  },\r\n  {\r\n    category: \"Food\",\r\n    budget: 0,\r\n    flow: 0\r\n  },\r\n  {\r\n    category: \"Gas\",\r\n    budget: 0,\r\n    flow: 0\r\n  },\r\n  {\r\n    category: \"Fun\",\r\n    budget: 0,\r\n    flow: 0,\r\n  },\r\n  {\r\n    category: \"Rent\",\r\n    budget: 0,\r\n    flow: 0\r\n  },\r\n  {\r\n    category: \"Emergency\",\r\n    budget: 0,\r\n    flow: 0\r\n  }\r\n];\r\n\r\nconst asset = 0;\r\nvar contentNode = document.getElementById(\"contents\");\r\n\r\nconst IssueRow = (props) => (\r\n  <tr>\r\n    <td>{props.issue.category}</td>\r\n    <td>{props.issue.budget}</td>\r\n    <td>{props.issue.flow}</td>\r\n    <td>{props.issue.budget - props.issue.flow}</td>\r\n  </tr>\r\n);\r\nfunction BudgetTable(props) {\r\n  const issueRows = props.issues.map(issue => (\r\n    <IssueRow key={issue.id} issue={issue} />\r\n  ));\r\n  return (\r\n    <div className=\"form-group\" style={{margin:\"2%\", border: \"3px solid white\"}}>\r\n      <table className=\"table table-striped table-dark\" style={{float: \"left\"}}>\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th>Category</th>\r\n            <th>Budget</th>\r\n            <th>Flow</th>\r\n            <th>Balance</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{issueRows}</tbody>\r\n      </table>  \r\n    </div>\r\n  );\r\n}\r\n\r\nfunction BalanceTable(props) {\r\n  let spent = 0;\r\n  let budget = 0;\r\n  let savings = 0;\r\n  let i;\r\n  for(i in props.issues){\r\n    spent += parseInt(props.issues[i].flow);\r\n    budget += parseInt(props.issues[i].budget);\r\n    if(props.issues[i].category === \"Savings\"){\r\n      savings += parseInt(props.issues[i].budget);\r\n    }\r\n  }\r\n  return (\r\n    <table style={{ width: \"100px\", margin: \"auto\"}} className=\"table table-light striped-table\">\r\n      <thead className=\"text-white\" style={{backgroundColor: \"darkGreen\"}}> \r\n        <tr>\r\n        <th>Budget</th>\r\n          <th>Income</th>\r\n          <th>Outflow</th> \r\n          <th>Balance</th>\r\n          <th>Savings</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody className=\"table-dark\">\r\n        <tr>\r\n          <td>{budget}</td>\r\n          <td>{props.asset}</td>\r\n          <td>{spent}</td>\r\n          <td>{props.asset-budget}</td>\r\n          <td>{savings}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nclass BudgetAdd extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  \r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    let form = document.forms.BudgetAdd;\r\n    this.props.enterInfo({\r\n      category: form.category.value,\r\n      budget: form.budget.value,\r\n      flow: parseInt(form.flow.value)\r\n    });\r\n    // Clear the form for the next input.\r\n    form.budget.value = '';\r\n    form.flow.value = '';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{width: \"100%\", marginTop: \"3%\"}}>\r\n        <form name=\"BudgetAdd\" onSubmit={this.handleSubmit}>\r\n          <div className=\"form-row\">\r\n            <div className=\"col-md-4 mb-3\">\r\n              <input className=\"form-control\" type=\"text\" name=\"category\" placeholder=\"Category\" />\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n              <input className=\"form-control\" type=\"number\" name=\"budget\" placeholder=\"Budget (*Optional*)\" />\r\n            </div>\r\n            <div className=\"col-md-3 mb-3\" style={{float: \"left\"}}>\r\n              <input className=\"form-control\" style={{width: \"100%\", float: \"left\"}} type=\"number\" name=\"flow\" placeholder=\"Out-flow\" />\r\n            </div>\r\n            <div className=\"col \">\r\n              <button className=\"form-control text-white btn-success\" style={{ backgroundColor: \"darkGreen\", border: \"1px solid white\", float: \"right\", width: \"100%\", margin: \"auto\" }}>Add</button>\r\n            </div>\r\n            \r\n          </div>\r\n          \r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Navbar extends React.Component {\r\n  constructor(props){\r\n    super()\r\n  }\r\n  render() {\r\n    return (\r\n      <nav className=\"sticky-top navbar navbar-expand navbar-dark bg-dark\">\r\n          <div className=\"nav navbar-nav\">\r\n          <a className=\"btn btn-success\" href=\"/index.html\" style={{marginRight: \"1vh\"}}>Home<span className=\"sr-only\">(current)</span></a>\r\n          <a className=\"btn btn-success\" href=\"/view02.html\">Reports<span className=\"sr-only\">(current)</span></a>\r\n          </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nclass Jumbo extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"jumbotron\" style={{margin: \"auto\", padding: \"5%\"}}>\r\n        <div className=\"container\" style={{border: \"1px solid black\", borderStyle: \"dotted\", padding: \"5%\", backgroundColor: \"darkGreen\", color: \"white\"}}>\r\n          <h1 className=\"display-3\">My Budget</h1>\r\n          <p className=\"lead\">Your Budgeting Calculator</p>\r\n          <hr className=\"my-2\" style={{ border: \"1px white dotted\" }} />\r\n          <p className=\"lead\" style={{ paddingTop: \"6px\" }}>\r\n            <a className=\"btn btn-success btn-lg\" href=\"/view02.html\" role=\"button\">Jump to My Reports</a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nclass IncomeAdd extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    let form = document.forms.IncomeAdd;\r\n    this.props.createInflow({income: form.income.value});\r\n    // Clear the form for the next input.\r\n    form.income.value = '';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{width: \"50%\", paddingTop: \"3%\", margin: \"2% auto\", backgroundColor: \"greenYellow\", border: \"3px solid white\", borderRadius: \"1vh\"}}>\r\n        <form name=\"IncomeAdd\" onSubmit={this.handleSubmit}>\r\n          <input style={{width: \"90%\", margin: \"auto\"}} className=\"form-control\" type=\"text\" name=\"income\" placeholder=\"Income\" />\r\n          <button style={{width: \"auto\", margin: \"3% auto\", backgroundColor: \"darkGreen\"}} className=\"form-control btn-success\">Add</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class IssueList extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { issues: [], asset: -1 };\r\n\r\n    this.enterInfo = this.enterInfo.bind(this);\r\n    this.createInflow = this.createInflow.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    // Note: React Router automatically adds a \"location\" property to a react\r\n    //       object's \"props\". The object that the \"location\" property refers\r\n    //       to also has a \"search\" property which is the query string of the\r\n    //       URL, including the '?' character  -  which is why we do not need\r\n    //       to add it to the string in the `fetch()` call.\r\n    fetch(`/api/SaveMe${this.props.location.search}`).then(response => {\r\n      if (response.ok) {\r\n        response.json().then(data => {\r\n          console.log(\"Total count of records:\", data._metadata.total_count);\r\n          this.setState({ issues: data.assets });\r\n        });\r\n      } else {\r\n        response.json().then(error => {\r\n          alert(\"Failed to fetch issues:\" + error.message)\r\n        });\r\n      }\r\n    }).catch(err => {\r\n      alert(\"Error in fetching data from server:\", err);\r\n    });\r\n  }\r\n\r\n  update(newIssue) {\r\n    fetch('/api/SaveMe', {\r\n      method: 'POST',\r\n      body: JSON.stringify(newIssue),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => {\r\n      return res;\r\n    }).catch(err => err);\r\n  }\r\n\r\n  enterInfo(newIssue) {\r\n    const newIssues = this.state.issues.slice();\r\n    if(isNaN(parseInt(newIssue.flow))){\r\n      newIssue.flow = 0;\r\n    }\r\n    let i;\r\n    for (i in newIssues) {\r\n      if(newIssues[i].category === newIssue.category){\r\n        if(newIssues[i].flow === undefined){\r\n          newIssues[i].flow = parseInt(newIssue.flow);\r\n        }else{\r\n          newIssues[i].flow += parseInt(newIssue.flow);\r\n        }\r\n        if(isNaN(parseInt(newIssue.budget))){\r\n        }else{\r\n          newIssues[i].budget = newIssue.budget;\r\n        }\r\n        this.setState({ issues: newIssues });\r\n        return;\r\n      }\r\n    }\r\n    if(!isNaN(parseInt(newIssue.budget))){\r\n      newIssues.push(newIssue);\r\n    }\r\n    this.setState({ issues: newIssues });\r\n    this.update(newIssue);\r\n  }\r\n\r\n  createInflow(newFlow) {\r\n    let assets = this.state.asset;\r\n    if(isNaN(parseInt(newFlow.income))){\r\n      return;\r\n    }\r\n    let total = assets + parseInt(newFlow.income);\r\n    this.setState({ asset: total});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bg-success\">\r\n        <Navbar/>\r\n        <div className=\"container\" style={{margin: \"2% auto\"}}>\r\n          <div className=\"row\">\r\n            <div className=\"col\" style={{backgroundColor: \"lightGreen\", border: \"3px solid white\", borderRadius: \"3vh\" }}>\r\n              <BudgetTable issues={this.state.issues} />\r\n            </div>\r\n            <div className=\"col\" style={{margin: \"auto\"}}>\r\n              <BalanceTable asset={this.state.asset} issues={this.state.issues} />\r\n              <IncomeAdd createInflow={this.createInflow} />\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n        <div style={{clear: \"both\"}}/>\r\n        <div className=\"container\" style={{margin: \"auto\"}}>\r\n          <BudgetAdd enterInfo={this.enterInfo} />\r\n        </div>\r\n        <Jumbo />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nIssueList.propTypes = {\r\n  location: React.PropTypes.object.isRequired,\r\n  router: React.PropTypes.object,\r\n};\r\n// This renders the JSX component inside the content node:\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/App01.jsx"],"sourceRoot":""}