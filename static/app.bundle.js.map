{"version":3,"sources":["webpack:///./src/App01.jsx","webpack:///./src/App00.jsx","webpack:///./src/App.jsx","webpack:///./src/App02.jsx"],"names":["contentNode","document","getElementById","IssueRow","props","issue","category","budget","flow","BudgetTable","issueRows","issues","map","id","margin","border","float","BalanceTable","spent","savings","i","parseInt","width","backgroundColor","asset","BudgetAdd","handleSubmit","bind","e","preventDefault","form","forms","enterInfo","value","marginTop","React","Component","Navbar","marginRight","Jumbo","padding","color","borderRadius","paddingTop","IncomeAdd","createInflow","income","IssueList","state","loadData","fetch","location","search","then","response","ok","json","console","log","data","_metadata","total_count","setState","assets","alert","error","message","catch","err","res","money","newIssue","method","body","JSON","stringify","headers","total","obj","newIssues","slice","isNaN","undefined","push","update","newFlow","paid","backgroundImage","backgroundSize","paddingBottom","height","clear","propTypes","PropTypes","object","isRequired","router","Filter","textAlign","position","top","left","marginLeft","IncomeSubtract","createOutflow","spend","HomePage","a","cash","ReactDOM","render","NoMatch","App","children","RoutedApp","hashHistory","Reports","Graph","name","maxWidth","GraphGrid","Stats","contents","totalIncome","totalSpent","totalSave","expense","save","Data","randQuote","quotebucket","picked","Math","floor","random","length","Quote","Results","current","marginBottom"],"mappings":"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","file":"static/app.bundle.js","sourcesContent":["import { Router, Route, hashHistory, withRouter, IndexRoute, Link } from 'react-router';\r\nimport HomePage from './App00.jsx'\r\nimport React from 'react'\r\nvar contentNode = document.getElementById(\"contents\");\r\n\r\nconst IssueRow = (props) => (\r\n  <tr>\r\n    <td contentEditable>{props.issue.category}</td>\r\n    <td contentEditable>{props.issue.budget}</td>\r\n    <td contentEditable>{props.issue.flow}</td>\r\n    <td>{props.issue.budget - props.issue.flow}</td>\r\n  </tr>\r\n);\r\nfunction BudgetTable(props) {\r\n  const issueRows = props.issues.map(issue => (\r\n    <IssueRow key={issue.id} issue={issue} />\r\n  ));\r\n  return (\r\n    <div className=\"form-group\" style={{ margin: \"2%\", border: \"3px solid white\" }}>\r\n      <table className=\"table table-striped table-dark\" style={{ float: \"left\" }}>\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th>Category</th>\r\n            <th>Budget</th>\r\n            <th>Flow</th>\r\n            <th>Balance</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{issueRows}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction BalanceTable(props) {\r\n  let spent = 0;\r\n  let budget = 0;\r\n  let savings = 0;\r\n  let i;\r\n  for (i in props.issues) {\r\n    spent += parseInt(props.issues[i].flow);\r\n    budget += parseInt(props.issues[i].budget);\r\n    if (props.issues[i].category === \"Savings\") {\r\n      savings += parseInt(props.issues[i].budget);\r\n    }\r\n  }\r\n  return (\r\n    <table style={{ width: \"100px\", margin: \"auto\" }} className=\"table table-light striped-table\">\r\n      <thead className=\"text-white\" style={{ backgroundColor: \"darkGreen\" }}>\r\n        <tr>\r\n          <th>Budget</th>\r\n          <th>Income</th>\r\n          <th>Outflow</th>\r\n          <th>Balance</th>\r\n          <th>Savings</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody className=\"table-dark\">\r\n        <tr>\r\n          <td>{budget}</td>\r\n          <td>{props.asset}</td>\r\n          <td>{spent}</td>\r\n          <td>{props.asset - budget}</td>\r\n          <td>{savings}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nclass BudgetAdd extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    let form = document.forms.BudgetAdd;\r\n    this.props.enterInfo({\r\n      category: form.category.value,\r\n      budget: form.budget.value,\r\n      flow: parseInt(form.flow.value)\r\n    });\r\n    // Clear the form for the next input.\r\n    form.budget.value = '';\r\n    form.flow.value = '';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"100%\", marginTop: \"3%\" }}>\r\n        <form name=\"BudgetAdd\" onSubmit={this.handleSubmit}>\r\n          <div className=\"form-row\">\r\n            <div className=\"col-md-4 mb-3\">\r\n              <input className=\"form-control\" type=\"text\" name=\"category\" placeholder=\"Category\" />\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n              <input className=\"form-control\" type=\"number\" name=\"budget\" placeholder=\"Budget (*Optional*)\" />\r\n            </div>\r\n            <div className=\"col-lg-3 col-md-4 mb-3\" style={{ float: \"left\" }}>\r\n              <input className=\"form-control\" style={{ width: \"100%\", float: \"left\" }} type=\"number\" name=\"flow\" placeholder=\"Out-flow\" />\r\n            </div>\r\n            <div className=\"col-lg-1 col-md-12 mb-3 \">\r\n              <button className=\"form-control text-white btn-success\" style={{ backgroundColor: \"darkGreen\", border: \"1px solid white\", float: \"right\", width: \"100%\", margin: \"auto\" }}>Add</button>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Navbar extends React.Component {\r\n  constructor(props) {\r\n    super()\r\n  }\r\n  render() {\r\n    return (\r\n      <nav className=\"sticky-top navbar navbar-expand navbar-dark bg-dark\">\r\n        <div className=\"nav navbar-nav\">\r\n          <a className=\"btn btn-success\" href=\"#/\" style={{ marginRight: \"1vh\" }}>Home<span className=\"sr-only\">(current)</span></a>\r\n          <a className=\"btn btn-success\" href=\"#/reports\">Reports<span className=\"sr-only\">(current)</span></a>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nclass Jumbo extends React.Component {\r\n  render() {\r\n    return (\r\n      \r\n        <div className=\"container\" style={{ padding: \"5%\", backgroundColor: \"darkGreen\", color: \"white\",border: \"3px solid white\", borderRadius: \"3rem\" }}>\r\n          <h1 className=\"display-3\">My Budget</h1>\r\n          <p className=\"lead\">Your Budgeting Calculator</p>\r\n          <hr className=\"my-2\" style={{ }} />\r\n          <p className=\"lead\" style={{ paddingTop: \"6px\" }}>\r\n            <a className=\"btn btn-success btn-lg\" href=\"#/reports\" role=\"button\">Jump to My Reports</a>\r\n          </p>\r\n        </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\n\r\nclass IncomeAdd extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    let form = document.forms.IncomeAdd;\r\n    this.props.createInflow({ income: form.income.value });\r\n    // Clear the form for the next input.\r\n    form.income.value = '';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"50%\", paddingTop: \"3%\", margin: \"2% auto\", backgroundColor: \"greenYellow\", border: \"3px solid white\", borderRadius: \"1vh\" }}>\r\n        <form name=\"IncomeAdd\" onSubmit={this.handleSubmit}>\r\n          <input style={{ width: \"90%\", margin: \"auto\" }} className=\"form-control\" type=\"text\" name=\"income\" placeholder=\"Income\" />\r\n          <button style={{ width: \"auto\", margin: \"3% auto\", backgroundColor: \"darkGreen\" }} className=\"form-control btn-success\">Add</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class IssueList extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { issues: [], asset: 0 };\r\n\r\n    this.enterInfo = this.enterInfo.bind(this);\r\n    this.createInflow = this.createInflow.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    // Note: React Router automatically adds a \"location\" property to a react\r\n    //       object's \"props\". The object that the \"location\" property refers\r\n    //       to also has a \"search\" property which is the query string of the\r\n    //       URL, including the '?' character  -  which is why we do not need\r\n    //       to add it to the string in the `fetch()` call.\r\n    fetch(`/api/SaveMe${this.props.location.search}`).then(response => {\r\n      if (response.ok) {\r\n        response.json().then(data => {\r\n          console.log(\"Total count of records:\", data._metadata.total_count);\r\n          this.setState({ issues: data.assets, income: data.income });\r\n        });\r\n      } else {\r\n        response.json().then(error => {\r\n          alert(\"Failed to fetch issues:\" + error.message)\r\n        });\r\n      }\r\n    }).catch(err => {\r\n      alert(\"Error in fetching data from server:\", err);\r\n    });\r\n    \r\n    fetch('/api/Money').then(res => {\r\n      if(res.ok){\r\n        console.log(\"Processing Money\")\r\n        res.json().then(data => {\r\n          this.setState({ asset: data.money })\r\n          console.log(\"Spotting: \", data.money)\r\n        });\r\n      } else {\r\n        alert(\"Failure to fetch\")\r\n      }\r\n      \r\n    }).catch(err => {\r\n      alert(\"Error in fetching data from the server:\", err)\r\n    });\r\n\r\n  }\r\n\r\n  update(newIssue) {\r\n    fetch('/api/SaveMe', {\r\n      method: 'POST',\r\n      body: JSON.stringify(newIssue),\r\n      headers: {       \r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => {\r\n      return res;\r\n    }).catch(err => err);\r\n  }\r\n\r\n  paid(income) {\r\n    let total = parseInt(this.state.asset) + parseInt(income)\r\n    let obj = {\r\n      \"money\": total\r\n    }\r\n    console.log(\"here is obj: \", JSON.stringify(obj))\r\n    fetch('/api/Money', {\r\n      method: 'POST',\r\n      body: JSON.stringify(obj),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => {\r\n      console.log(\"RES: \", res)\r\n      return res;\r\n    }).catch(err => err)\r\n    this.setState({asset: total})\r\n  }\r\n\r\n  enterInfo(newIssue) {\r\n    const newIssues = this.state.issues.slice();\r\n    if (isNaN(parseInt(newIssue.flow))) {\r\n      newIssue.flow = 0;\r\n    }\r\n    let i;\r\n    for (i in newIssues) {\r\n      if (newIssues[i].category === newIssue.category) {\r\n        if (newIssues[i].flow === undefined) {\r\n          newIssues[i].flow = parseInt(newIssue.flow);\r\n        } else {\r\n          newIssues[i].flow += parseInt(newIssue.flow);\r\n        }\r\n        if (isNaN(parseInt(newIssue.budget))) {\r\n          console.log(\"Not Int\");\r\n        } else {\r\n          newIssues[i].budget = newIssue.budget;\r\n        }\r\n        this.setState({ issues: newIssues });\r\n        return;\r\n      }\r\n    }\r\n    if (!isNaN(parseInt(newIssue.budget))) {\r\n      newIssues.push(newIssue);\r\n    }\r\n    this.setState({ issues: newIssues });\r\n    this.update(newIssue);\r\n  }\r\n\r\n  createInflow(newFlow) {\r\n    let assets = this.state.asset;\r\n    if (isNaN(parseInt(newFlow.income))) {\r\n      return;\r\n    }\r\n    this.paid(newFlow.income)\r\n    console.log(\"Inflow created for: \", newFlow.income)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bg-success\" style={{backgroundImage: \"url('images/dark-honeycomb.png')\" , backgroundSize: \"auto\", paddingBottom: \"2%\", height: \"100vh\"  }}>\r\n        <Navbar />\r\n        <div className=\"container\" style={{ margin: \"2% auto\" }}>\r\n          <div className=\"row\">\r\n            <div className=\"col\" style={{ backgroundColor: \"lightGreen\", border: \"3px solid white\", borderRadius: \"3vh\" }}>\r\n              <BudgetTable issues={this.state.issues} />\r\n            </div>\r\n            <div className=\"col\" style={{ margin: \"auto\" }}>\r\n              <div style={{  backgroundColor: \"greenYellow\",padding:\"8px\", border: \"3px solid white\", borderRadius: \"3vh\"}}>\r\n              <BalanceTable asset={this.state.asset} issues={this.state.issues} />\r\n              </div>\r\n              <IncomeAdd createInflow={this.createInflow} />\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div style={{ clear: \"both\" }} />\r\n        <div className=\"container\" style={{ margin: \"auto\" }}>\r\n          <BudgetAdd enterInfo={this.enterInfo} />\r\n        </div>\r\n        <div>\r\n          <Jumbo />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nIssueList.propTypes = {\r\n  location: React.PropTypes.object.isRequired,\r\n  router: React.PropTypes.object,\r\n};\r\n// This renders the JSX component inside the content node:\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/App01.jsx","import { Router, Route, hashHistory, withRouter, IndexRoute, Link } from 'react-router';\r\nimport IssueList from \"./App01.jsx\"\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nvar contentNode = document.getElementById(\"contents\");\r\n\r\nclass Filter extends React.Component {\r\n  render() {\r\n    return <div>Your Monthly Money Planner</div>;\r\n  }\r\n}\r\n\r\nconst IssueRow = (props) => (\r\n  <tr>\r\n\r\n  </tr>\r\n);\r\nfunction BudgetTable(props) {\r\n  const issueRows = props.issues.map(issue => (\r\n    <IssueRow key={issue.id} issue={issue} />\r\n  ));\r\n  return (\r\n    <div className=\"form-group\" style={{ margin: \"2%\" }}>\r\n\r\n    </div>\r\n  );\r\n}\r\nfunction BalanceTable(props) {\r\n  let spent = 0;\r\n  let budget = 0;\r\n  let savings = 0;\r\n  let i;\r\n  for (i in props.issues) {\r\n    spent += parseInt(props.issues[i].flow);\r\n    budget += parseInt(props.issues[i].budget);\r\n    if (props.issues[i].category === \"Savings\") {\r\n      savings += parseInt(props.issues[i].budget);\r\n    }\r\n  }\r\n  return (\r\n\r\n    <div style={{textAlign:\"center\"}} >\r\n    <table style={{ width: \"100px\", margin: \"auto\", float: \"center\" }} className=\"table table-light striped-table\">\r\n      <thead className=\"text-white\" style={{ backgroundColor: \"#4d4d4d\" ,}}>\r\n        <tr>\r\n\r\n          <th>Income</th>\r\n\r\n          <th>Balance</th>\r\n\r\n        </tr>\r\n      </thead>\r\n      <tbody className=\"table-dark\">\r\n        <tr>\r\n\r\n          <td>{props.asset}</td>\r\n\r\n          <td>{props.asset - budget}</td>\r\n\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass BudgetAdd extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    let form = document.forms.BudgetAdd;\r\n    this.props.enterInfo({\r\n      category: form.category.value,\r\n      budget: form.budget.value,\r\n      flow: parseInt(form.flow.value),\r\n    });\r\n    // Clear the form for the next input.\r\n    form.budget.value = '';\r\n    form.flow.value = '';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Navbar extends React.Component {\r\n  constructor(props) {\r\n    super()\r\n  }\r\n  render() {\r\n    return (\r\n      <nav className=\"sticky-top navbar navbar-expand navbar-dark bg-dark\">\r\n        <div className=\"nav navbar-nav\">\r\n          <a className=\"btn btn-success\" href=\"#/budget\" style={{marginRight: \"1vh\"}}>Budget<span className=\"sr-only\">(current)</span></a>\r\n          <a className=\"btn btn-success\" href=\"#/reports\">Reports<span className=\"sr-only\">(current)</span></a>\r\n        </div>\r\n      </nav>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n//incomeAdd\r\nclass IncomeAdd extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    let form = document.forms.IncomeAdd;\r\n\r\n    this.props.createInflow({ income: form.income.value });\r\n    //this.props.createOutflow({income: form.spend.value});\r\n\r\n    // Clear the form for the next input.\r\n    form.income.value = '';\r\n    // form.spend.value = '';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      // let in this button is income\r\n\r\n      <div style={{ position: \"static\", top: \"10rem\", left: \"-25rem\", float: \"left\", width: \"60%\", marginLeft: \"20%\", marginTop: \"3%\" }}>\r\n        <form name=\"IncomeAdd\" onSubmit={this.handleSubmit}>\r\n          <input className=\"form-control\" type=\"text\" name=\"income\" placeholder=\"Income\" />\r\n          <button className=\"form-control btn-success\" >Quick Add</button>\r\n        </form>\r\n      </div>\r\n\r\n    );\r\n\r\n  }\r\n}\r\n//incomesubtract\r\nclass IncomeSubtract extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    let form = document.forms.IncomeSubtract;\r\n\r\n    this.props.createOutflow({ spend: form.spend.value });\r\n    // Clear the form for the next input.\r\n    form.spend.value = '';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ position: \"static\", top: \"10rem\", left: \"-25rem\", float: \"left\", width: \"60%\", marginLeft: \"20%\", marginTop: \"3%\" }}>\r\n        <form name=\"IncomeSubtract\" onSubmit={this.handleSubmit}>\r\n          <input className=\"form-control\" type=\"text\" name=\"spend\" placeholder=\"Spend\" />\r\n          <button className=\"form-control btn-success\">Quick Spend</button>\r\n        </form>\r\n      </div>\r\n\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default class HomePage extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { issues: [], asset: -1 };\r\n\r\n    this.enterInfo = this.enterInfo.bind(this);\r\n    this.createInflow = this.createInflow.bind(this);\r\n    this.createOutflow = this.createOutflow.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    fetch('/api/Money', {\r\n      method: 'GET'\r\n    }).then(res => {\r\n      console.log(\"Got money app00:\")\r\n      res.json().then(data => {\r\n        this.setState({ asset: data.money })\r\n        console.log(data.money)\r\n      });\r\n    }).catch(err => err);\r\n  }\r\n\r\n  enterInfo(newIssue) {\r\n    const newIssues = this.state.issues.slice();\r\n    if (isNaN(parseInt(newIssue.flow))) {\r\n      newIssue.flow = 0;\r\n    }\r\n    let i;\r\n    for (i in newIssues) {\r\n      if (newIssues[i].category === newIssue.category) {\r\n        if (newIssues[i].flow === undefined) {\r\n          newIssues[i].flow = parseInt(newIssue.flow);\r\n        } else {\r\n          newIssues[i].flow += parseInt(newIssue.flow);\r\n        }\r\n        if (isNaN(parseInt(newIssue.budget))) {\r\n          let a;\r\n        } else {\r\n          newIssues[i].budget = newIssue.budget;\r\n        }\r\n        this.setState({ issues: newIssues });\r\n        return;\r\n      }\r\n    }\r\n    if (!isNaN(parseInt(newIssue.budget))) {\r\n      newIssues.push(newIssue);\r\n    }\r\n    this.setState({ issues: newIssues });\r\n  }\r\n\r\n  createInflow(newFlow) {\r\n    let assets = this.state.asset;\r\n\r\n    if (isNaN(parseInt(newFlow.income))) {\r\n      return;\r\n    }\r\n\r\n    let total = assets + parseInt(newFlow.income);\r\n    this.money(total);\r\n  }\r\n\r\n  money(cash) {\r\n    let obj = {\r\n      \"money\": cash\r\n    }\r\n    console.log(\"here is obj: \", JSON.stringify(obj))\r\n    fetch('/api/Money', {\r\n      method: 'POST',\r\n      body: JSON.stringify(obj),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => {\r\n      console.log(\"RES: \", res)\r\n      return res;\r\n    }).catch(err => err)\r\n    this.setState({ asset: cash })\r\n  }\r\n\r\n  createOutflow(newFlow) {\r\n    let assets = this.state.asset;\r\n\r\n    if (isNaN(parseInt(newFlow.spend))) {\r\n      return;\r\n    }\r\n\r\n    let total = assets - parseInt(newFlow.spend);\r\n    this.money(total)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bg-success\" style={{backgroundImage: \"url('images/green-wave.png')\" , backgroundSize: \"cover\", paddingBottom: \"2%\", height: \"100vh\"  }}>\r\n        <Navbar />\r\n        <div style={{ width: \"400px\",  margin: \"auto\", paddingTop: \"2%\" }}>\r\n          <div style={{ margin:\"auto\", width: \"70%\",backgroundColor: \"green\", color: \"white\", borderRadius: \"1rem\", paddingTop:\"4px\",paddingBottom:\"4px\"}}>\r\n            <BalanceTable asset={this.state.asset} issues={this.state.issues}style={{ }}/>\r\n          </div>\r\n          <div className=\"card\" style={{ marginTop: \"10%\", padding: \"1vh\",width:\"80%\" ,margin:\"auto\",borderRadius: \"1rem\" }}>\r\n            <div className=\"card-body\" style={{ margin:\"auto\"}}>\r\n              <IncomeAdd createInflow={this.createInflow} />\r\n              <IncomeSubtract createOutflow={this.createOutflow} />\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div style={{ clear: \"both\" }} />\r\n\r\n        <BudgetAdd enterInfo={this.enterInfo} />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// This renders the JSX component inside the content node:\r\nReactDOM.render(<HomePage />, contentNode);\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/App00.jsx","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, Route, hashHistory, withRouter, IndexRoute, Link } from 'react-router';\nimport IssueList from './App01.jsx'\nimport HomePage from './App00.jsx'\nimport Reports from './App02.jsx'\n\nvar contentNode = document.getElementById(\"contents\");\n\n// A simple component to indicate that a page was not found.\nconst NoMatch = () => <p>Page Not Found</p>;\n\n// This defines the main application layout that can be used\n// across nested routes. The `props.children` property is received\n// by the parent route. See the route definitions below.\nconst App = (props) => (\n  <div>\n    <div className=\"header\">\n      <h1>Issue Tracker</h1>\n      <p><Link to=\"/\">Logout</Link></p>\n    </div>\n    <div className=\"contents\">\n      {props.children}\n    </div>\n    <div className=\"footer\">\n      COMPSCI 326\n    </div>\n  </div >\n);\n\n// For safety, we specify that the prop types received by the\n// App component must require a \"children\" property. If we do\n// not include this it will not compile.\nApp.propTypes = {\n  children: React.PropTypes.object.isRequired,\n};\n\n// The \"routed app\" that defines the different routes that\n// are supposed in this application. As you can see, If the\n// URL path is '/' we will render the IssueList component,\n// if the path is '/issues/:id' we render the IssueEdit component,\n// and if we get anything else we render the NoMatch view.\n// This router uses the \"hash history\" approach to implement\n// single-page apps with multiple views.\nconst RoutedApp = () => (\n  <Router history={hashHistory} >\n    {/* <Redirect from=\"/\" to=\"/issues\" /> - replaced this with the Dashboard component */}\n    <Route exact path=\"/\" component={HomePage} />\n    <Route path=\"/budget\" component={IssueList}/>\n    <Route path=\"/reports\" component={Reports}/>\n  </Router>);\n\n// This renders the JSX router inside the content node:\nReactDOM.render(<RoutedApp />, contentNode);\n\n\n// WEBPACK FOOTER //\n// ./src/App.jsx","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// This is a place holder for the initial application state.\r\n\r\nclass Navbar extends React.Component {\r\n  constructor(props) {\r\n    super()\r\n  }\r\n  render() {\r\n    return (\r\n      <nav className=\"sticky-top navbar navbar-expand navbar-dark bg-dark\">\r\n          <div className=\"nav navbar-nav\">  \r\n          <a className=\"btn btn-success\" href=\"#/\" style={{ marginRight: \"1vh\" ,backgroundColor: \"royalBlue\",border: \"1px groove royalBlue\" , color: \"white\"}}>Home<span className=\"sr-only\">(current)</span></a>\r\n          <a className=\"btn btn-success\" href=\"#/budget\" style={{ marginRight: \"1vh\" ,backgroundColor: \"royalBlue\",border: \"1px groove royalBlue\" , color: \"white\"}}>Budget<span className=\"sr-only\">(current)</span></a>\r\n          </div>\r\n        </nav>\r\n    )\r\n  }\r\n}\r\n// This grabs the DOM element to be used to mount React components.\r\nvar contentNode = document.getElementById(\"contents\");\r\nfunction Graph(props) {\r\n  let name = props.name;\r\n  return (\r\n    <div>\r\n      <table style={{ backgroundColor: \"lightBlue\", margin: \"auto\", color: \"white\" }}>\r\n        <tbody>\r\n          <tr>\r\n            <td className=\"center\" style={{ margin: \"auto\" }}><i>Graph of {name}</i></td>\r\n          </tr>\r\n          <tr>\r\n            <td><img src=\"https://via.placeholder.com/300\" alt=\"\" style={{ maxWidth: \"100%\", height: \"auto\" }} /></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nclass GraphGrid extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <Graph name=\"Income\" />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <Graph name=\"Outflow\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction Stats(props) {\r\n  let spent = 0;\r\n  let savings = 0;\r\n  let i;\r\n  for (i in props.contents) {\r\n    spent += parseInt(props.contents[i].flow);\r\n    if (props.contents[i].category === \"Savings\") {\r\n      savings += parseInt(props.contents[i].budget);\r\n    }\r\n  }\r\n  return (\r\n    <div style={{ padding: \"6%\", backgroundColor: \"navy\", color: \"white\", borderRadius: \"3rem\", margin: \"5% auto\"  }}>\r\n      <table className=\"table bg-white\"style={{  borderRadius: \".5rem\" }}>\r\n        <thead>\r\n          <tr>\r\n            <th></th>\r\n            <th>Total Income</th>\r\n            <th>Total Expenditures</th>\r\n            <th>Total Savings</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td></td>\r\n            <td>{props.totalIncome}</td>\r\n            <td>{props.contents.totalSpent}</td>\r\n            <td>{props.contents.totalSave}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <IncomeAdd contents={props.contents} createInflow={props.createInflow} />\r\n    </div>\r\n  )\r\n}\r\nclass IncomeAdd extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    let form = document.forms.IncomeAdd;\r\n    this.props.createInflow({ income: form.income.value, expense: form.expense.value, save: form.save.value });\r\n    // Clear the form for the next input.\r\n    form.income.value = '';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"50%\", paddingTop: \"3%\", margin: \"2% auto\", backgroundColor: \"lightBlue\", border: \"3px solid white\" }}>\r\n        <form name=\"IncomeAdd\" onSubmit={this.handleSubmit}>\r\n          <input style={{ width: \"90%\", margin: \"auto\" }} className=\"form-control\" type=\"text\" name=\"income\" placeholder=\"Income\" />\r\n          <input style={{ width: \"90%\", margin: \"auto\" }} className=\"form-control\" type=\"text\" name=\"expense\" placeholder=\"Expenses\" />\r\n          <input style={{ width: \"90%\", margin: \"auto\" }} className=\"form-control\" type=\"text\" name=\"save\" placeholder=\"Saved\" />\r\n          <button style={{ width: \"auto\", margin: \"3% auto\", backgroundColor: \"navy\" }} className=\"form-control btn-primary\">Add</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass Jumbo extends React.Component {\r\n  render() {\r\n    return (\r\n      \r\n        <div className=\"container\" style={{ padding: \"5%\", backgroundColor: \"navy\", color: \"white\", borderRadius: \"3rem\" }}>\r\n          <h1 className=\"display-3\">My Reports</h1>\r\n          <p className=\"lead\">Your personalized financial reports</p>\r\n          <hr className=\"my-2\" style={{ border: \"1px dotted white\" }} />\r\n          <p className=\"lead\" style={{ paddingTop: \"6px\" }}>\r\n            <a className=\"btn btn-primary btn-lg\" href=\"#/budget\" role=\"button\" >Jump to My 'Budget'</a>\r\n          </p>\r\n        </div>\r\n  \r\n    )\r\n  }\r\n}\r\nclass Data extends React.Component {\r\n  render() {\r\n    return (\r\n        <div style={{ padding: \"5%\", backgroundColor: \"navy\", color: \"white\", borderRadius: \"3rem\", margin: \"5% auto\"  }}>\r\n        <table className=\"bordered-table\" style={{ marginLeft:\"auto\", marginRight:\"auto\" }}>\r\n          <thead>\r\n            <tr>\r\n              <i><b>Placeholder for reports</b></i>\r\n              <hr />\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td><img src=\"https://via.placeholder.com/200\" alt=\"\" /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        </div>\r\n    )\r\n  }\r\n}\r\nfunction randQuote(){\r\n  let quotebucket = [\"You've got this!\",\"We believe in you!\",\"You will meet your goal!\",\"A dollar a day adds up!\",\"Have a great day!\",\"You miss 100% if the shots you don't take- Wayne Gretzky- Micheal Scott\",\"Everybody Stay Calm\"];\r\n  let picked = \"\";\r\n  picked = quotebucket[Math.floor(Math.random() * quotebucket.length)];\r\n  return picked;\r\n}\r\nclass Quote extends React.Component {\r\n  \r\n  \r\n  render() {\r\n    return(\r\n      <div style={{ padding: \"1%\", backgroundColor: \"navy\", color: \"white\", borderRadius: \"3rem\"  }}>\r\n        <p style={{textAlign:\"center\", paddingTop:\"1%\"}}>Insperational Quote: \" {randQuote()} \"</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Results extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <b><i><u>Table Of Recorded Purchases</u></i></b>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Place of Purchase</th>\r\n              <th>Amount</th>\r\n              <th>Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>McDonald's</td>\r\n              <td><i><b>$4.28</b></i></td>\r\n              <td>3/11/19</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default class Reports extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { contents: [] };\r\n    this.createInflow = this.createInflow.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    fetch('/api/Money', {\r\n      method: 'GET'\r\n    }).then(res => {\r\n      console.log(\"App02 loading\")\r\n      console.log(\"Got money app00:\")\r\n      res.json().then(data => {\r\n        this.setState({ asset: data.money })\r\n        console.log(data.money)\r\n      });\r\n    }).catch(err => {\r\n      console.log(\"ERROR: \", err);\r\n    });\r\n    fetch('/api/SaveMe', {\r\n      method: 'GET'\r\n    }).then(res => {\r\n      console.log(\"Getting SaveMe Data\")\r\n      res.json().then(data => {\r\n        this.setState({contents: data.assets})\r\n      });\r\n    }).catch(err => {\r\n      console.log(\"ERROR: \", err);\r\n    })\r\n  }\r\n\r\n  money(cash) {\r\n    let obj = {\r\n      \"money\": cash\r\n    }\r\n    console.log(\"here is obj: \", JSON.stringify(obj))\r\n    fetch('/api/Money', {\r\n      method: 'POST',\r\n      body: JSON.stringify(obj),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => {\r\n      console.log(\"RES: \", res)\r\n      return res;\r\n    }).catch(err => err)\r\n    this.setState({ asset: cash })\r\n  }\r\n\r\n  createInflow(newFlow) {\r\n    const current = parseInt(this.state.asset);\r\n    if (isNaN(parseInt(newFlow.income))) {\r\n      console.log(\"ISNAN\");\r\n    }\r\n    let totalIncome = current + parseInt(newFlow.income);\r\n    this.money(totalIncome);\r\n  }\r\n//        <div style={{ float: \"center\", marginLeft: \"12%\", marginRight: \"12%\", paddingBottom: \"3%\", backgroundImage: \"require('../images/1200px-Sunset_2007-1.jpg')\"}}>\r\n//../images/dark-honeycomb.png\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bg-success\" style={{backgroundImage: \"url('images/blue-wave.png')\" , backgroundSize: \"cover\", paddingBottom: \"2%\",  }}>\r\n          <Navbar />\r\n          <div className=\"container\" style={{ marginTop: \"2%\" }}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"card\" style={{  borderRadius: \"3rem\" }}>\r\n                  <div className=\"card-body\" style={{ marginBottom: \"5%\" ,borderRadius: \"3rem\"}}>\r\n                    <Graph name=\"Income\" />\r\n                    <h4 className=\"card-title\" style={{ margin: \"0 auto\", textAlign: \"center\" }}>Graph #1</h4>\r\n                    <p className=\"card-text\" style={{ margin: \"0 auto\", textAlign: \"center\" }}>Graph of Income</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"col-md-6\">\r\n                <div className=\"card\" style={{ borderRadius: \"3rem\"}}>\r\n                  <div className=\"card-body\" style={{ marginBottom: \"5%\" ,borderRadius: \"3rem\"}}>\r\n                    <Graph name=\"Expenses\" />\r\n                    <h4 className=\"card-title\" style={{ margin: \"0 auto\", textAlign: \"center\" }}>Graph #2</h4>\r\n                    <p className=\"card-text\" style={{ margin: \"0 auto\", textAlign: \"center\" }}>Graph of Expenses</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div style={{ marginTop: \"2%\"}}>\r\n            <div className=\"container\" style={{ marginBottom: \"2%\" , borderRadius: \"3rem\" }}>\r\n              <div className=\"row\" style={{ backgroundColor: \"royalBlue\", color: \"white\", borderRadius: \"3rem\", border: \"2px solid white\" }}>\r\n                <div className=\"col-md-6\" style={{ marginBottom: \"2%\" , borderRadius: \"3rem\" }}>\r\n                  <div style={{ }}> \r\n                    <Data />\r\n                  </div>\r\n                  <div>\r\n                  <Quote />\r\n                </div>\r\n                </div>\r\n                \r\n                <div className=\"col-md-6\" style={{  }}>\r\n                  <div style={{ borderRadius: \"3rem\" }}>\r\n                  <Stats contents={this.state.contents} totalIncome={this.state.contents.totalIncome} createInflow={this.createInflow} />\r\n                  </div>\r\n                </div>\r\n                \r\n              </div>\r\n            </div>\r\n            <Jumbo />\r\n          </div>\r\n\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\n// This renders the JSX component inside the content node:\r\nReactDOM.render(<Reports />, contentNode);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/App02.jsx"],"sourceRoot":""}